c
user1
user
c
user1
c
exit
user1
user1.id
c
exit
user
user1.id
user1
c
exit
user
user.id
user
c
User::BASE_URI+"/#{params[:user]}/#{params[:repo]}"
c
User::BASE_URI+"/#{params[:user]}"
BASE_URI+"/#{params[:user]}
c
hash_objecthash_objecthash_objectc
exit
c
hash_object["name"].to_s
hash_object["name"].to_i
c
hash_object["name"]
c
User.create!(user_name:hash_object["login"])
hash_object["login"]
c
exit
c
user_id:"1"
hash_object["name"]
c
user_id:1
hash_object["name"]
 Repository.create(repo_name:hash_object["name"],user_id:1)
 hash_object
c
exit
 Repository.create_repo(response)
response = HTTParty.get(User::BASE_URI+"/#{params[:user]}/#{params[:repo]}")response = HTTParty.get(User::BASE_URI+"/#{params[:user]}/#{params[:repo]}") Repository.create_repo(response)
response = HTTParty.get(User::BASE_URI+"/#{params[:user]}/#{params[:repo]}")
response
c
User::BASE_URI+"/#{params[:user]}/#{params[:repo]}"
exit
User::BASE_URI+"/#{params[:user]}"+"/+#{params[:repo]}"
c
User::BASE_URI+"/#{params[:user]}"
HTTParty.get(User::BASE_URI+"/#{params[:user]}")
params[:user]
response
c
HTTParty.get(User::BASE_URI+"/#{params[user]}")
